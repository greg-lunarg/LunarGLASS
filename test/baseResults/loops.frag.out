
Top IR:
; ModuleID = 'Glslang'

@BaseColor = global <4 x float> zeroinitializer
@d = external addrspace(2) constant float
@bigColor = external addrspace(2) constant <4 x float>
@bigColor1_1 = external addrspace(2) constant <4 x float>
@d2 = external addrspace(2) constant float
@d3 = external addrspace(2) constant float
@bigColor1_2 = external addrspace(2) constant <4 x float>
@bigColor1_3 = external addrspace(2) constant <4 x float>
@d4 = external addrspace(2) constant float
@Count = external addrspace(2) constant i32
@bigColor2 = external addrspace(2) constant <4 x float>
@bigColor3 = external addrspace(2) constant <4 x float>
@bigColor4 = external addrspace(2) constant <4 x float>
@bigColor5 = external addrspace(2) constant <4 x float>
@d5 = external addrspace(2) constant float
@d6 = external addrspace(2) constant float
@bigColor6 = external addrspace(2) constant <4 x float>
@d7 = external addrspace(2) constant float
@bigColor7 = external addrspace(2) constant <4 x float>
@d8 = external addrspace(2) constant float
@d9 = external addrspace(2) constant float
@d10 = external addrspace(2) constant float
@d11 = external addrspace(2) constant float
@d12 = external addrspace(2) constant float
@bigColor8 = external addrspace(2) constant <4 x float>
@gl_FragColor = global <4 x float> zeroinitializer
@d14 = external addrspace(2) constant float
@d15 = external addrspace(2) constant float
@d16 = external addrspace(2) constant float
@d18 = external addrspace(2) constant float
@d17 = external addrspace(2) constant float
@d13 = external addrspace(2) constant float
@d19 = external addrspace(2) constant float
@d20 = external addrspace(2) constant float
@d21 = external addrspace(2) constant float
@d22 = external addrspace(2) constant float
@d23 = external addrspace(2) constant float
@d24 = external addrspace(2) constant float
@d25 = external addrspace(2) constant float
@d26 = external addrspace(2) constant float
@d27 = external addrspace(2) constant float
@d28 = external addrspace(2) constant float
@d29 = external addrspace(2) constant float
@d30 = external addrspace(2) constant float
@d31 = external addrspace(2) constant float
@d32 = external addrspace(2) constant float
@d33 = external addrspace(2) constant float
@d34 = external addrspace(2) constant float

define fastcc void @main() {
entry:
  %i100 = alloca i32
  %i89 = alloca i32
  %i79 = alloca i32
  %i66 = alloca i32
  %i59 = alloca i32
  %i = alloca i32
  %color = alloca <4 x float>
  br label %mainBody

mainBody:                                         ; preds = %entry
  %color1 = load <4 x float>* @BaseColor
  store <4 x float> %color1, <4 x float>* %color
  br label %loop-header

loop-header:                                      ; preds = %mainBody
  br i1 false, label %then, label %ifmerge

then:                                             ; preds = %loop-header
  br label %loop-merge

post-loop-break:                                  ; No predecessors!
  unreachable

ifmerge:                                          ; preds = %loop-header
  %0 = load <4 x float>* %color
  %1 = extractelement <4 x float> %0, i32 0
  %2 = fcmp olt float %1, 0x3FD51EB860000000
  br i1 %2, label %then2, label %ifmerge5

then2:                                            ; preds = %ifmerge
  %3 = load <4 x float>* %color
  %color3 = fadd <4 x float> %3, <float 0x3FD51EB860000000, float 0x3FD51EB860000000, float 0x3FD51EB860000000, float 0x3FD51EB860000000>
  store <4 x float> %color3, <4 x float>* %color
  br label %loop-merge

post-loop-break4:                                 ; No predecessors!
  unreachable

ifmerge5:                                         ; preds = %ifmerge
  %4 = load <4 x float>* %color
  %5 = extractelement <4 x float> %4, i32 0
  %6 = fcmp olt float %5, 0x3FE51EB860000000
  br i1 %6, label %then6, label %ifmerge9

then6:                                            ; preds = %ifmerge5
  %7 = load <4 x float>* %color
  %color7 = fadd <4 x float> %7, <float 0x3FE51EB860000000, float 0x3FE51EB860000000, float 0x3FE51EB860000000, float 0x3FE51EB860000000>
  store <4 x float> %color7, <4 x float>* %color
  br label %loop-merge

post-loop-break8:                                 ; No predecessors!
  unreachable

ifmerge9:                                         ; preds = %ifmerge5
  %8 = load <4 x float>* %color
  %color10 = fadd <4 x float> %8, <float 0x3FD51EB860000000, float 0x3FD51EB860000000, float 0x3FD51EB860000000, float 0x3FD51EB860000000>
  store <4 x float> %color10, <4 x float>* %color
  br label %loop-merge

post-loop-break11:                                ; No predecessors!
  unreachable

loop-merge:                                       ; preds = %ifmerge9, %then6, %then2, %then
  br label %loop-header12

loop-header12:                                    ; preds = %ifmerge15, %loop-merge
  %9 = load <4 x float>* %color
  %10 = extractelement <4 x float> %9, i32 0
  %11 = load float addrspace(2)* @d, !gla.uniform !3
  %12 = fcmp olt float %10, %11
  %13 = xor i1 %12, true
  br i1 %13, label %then13, label %ifmerge15

then13:                                           ; preds = %loop-header12
  br label %loop-merge17

post-loop-break14:                                ; No predecessors!
  unreachable

ifmerge15:                                        ; preds = %loop-header12
  %14 = load <4 x float> addrspace(2)* @bigColor, !gla.uniform !5
  %15 = load <4 x float>* %color
  %color16 = fadd <4 x float> %15, %14
  store <4 x float> %color16, <4 x float>* %color
  br label %loop-header12

loop-merge17:                                     ; preds = %then13
  br label %loop-header18

loop-header18:                                    ; preds = %ifmerge24, %then23, %loop-merge17
  %16 = load <4 x float>* %color
  %17 = extractelement <4 x float> %16, i32 2
  %18 = load float addrspace(2)* @d, !gla.uniform !3
  %19 = fcmp olt float %17, %18
  %20 = xor i1 %19, true
  br i1 %20, label %then19, label %ifmerge21

then19:                                           ; preds = %loop-header18
  br label %loop-merge26

post-loop-break20:                                ; No predecessors!
  unreachable

ifmerge21:                                        ; preds = %loop-header18
  %21 = load <4 x float> addrspace(2)* @bigColor1_1, !gla.uniform !6
  %22 = load <4 x float>* %color
  %color22 = fadd <4 x float> %22, %21
  store <4 x float> %color22, <4 x float>* %color
  %23 = load <4 x float>* %color
  %24 = extractelement <4 x float> %23, i32 3
  %25 = load float addrspace(2)* @d, !gla.uniform !3
  %26 = fcmp olt float %24, %25
  br i1 %26, label %then23, label %ifmerge24

then23:                                           ; preds = %ifmerge21
  br label %loop-header18

post-loop-continue:                               ; No predecessors!
  unreachable

ifmerge24:                                        ; preds = %ifmerge21
  %27 = load <4 x float> addrspace(2)* @bigColor1_1, !gla.uniform !6
  %28 = load <4 x float>* %color
  %color25 = fadd <4 x float> %28, %27
  store <4 x float> %color25, <4 x float>* %color
  br label %loop-header18

loop-merge26:                                     ; preds = %then19
  br label %loop-header27

loop-header27:                                    ; preds = %ifmerge30, %loop-merge26
  %29 = load <4 x float>* %color
  %30 = extractelement <4 x float> %29, i32 0
  %31 = fcmp olt float %30, 4.200000e+01
  %32 = xor i1 %31, true
  br i1 %32, label %then28, label %ifmerge30

then28:                                           ; preds = %loop-header27
  br label %loop-merge32

post-loop-break29:                                ; No predecessors!
  unreachable

ifmerge30:                                        ; preds = %loop-header27
  %33 = load <4 x float>* %color
  %color31 = fadd <4 x float> %33, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color31, <4 x float>* %color
  br label %loop-header27

loop-merge32:                                     ; preds = %then28
  br label %loop-header33

loop-header33:                                    ; preds = %ifmerge36, %loop-merge32
  %34 = load <4 x float>* %color
  %35 = extractelement <4 x float> %34, i32 3
  %36 = load float addrspace(2)* @d2, !gla.uniform !7
  %37 = fcmp olt float %35, %36
  %38 = load <4 x float>* %color
  %39 = extractelement <4 x float> %38, i32 1
  %40 = load float addrspace(2)* @d3, !gla.uniform !8
  %41 = fcmp olt float %39, %40
  %42 = and i1 %37, %41
  %43 = xor i1 %42, true
  br i1 %43, label %then34, label %ifmerge36

then34:                                           ; preds = %loop-header33
  br label %loop-merge38

post-loop-break35:                                ; No predecessors!
  unreachable

ifmerge36:                                        ; preds = %loop-header33
  %44 = load <4 x float> addrspace(2)* @bigColor1_2, !gla.uniform !9
  %45 = load <4 x float>* %color
  %color37 = fadd <4 x float> %45, %44
  store <4 x float> %color37, <4 x float>* %color
  br label %loop-header33

loop-merge38:                                     ; preds = %then34
  br label %loop-header39

loop-header39:                                    ; preds = %ifmerge46, %loop-merge38
  %46 = load <4 x float>* %color
  %47 = extractelement <4 x float> %46, i32 2
  %48 = load float addrspace(2)* @d3, !gla.uniform !8
  %49 = fcmp olt float %47, %48
  %50 = xor i1 %49, true
  br i1 %50, label %then40, label %ifmerge42

then40:                                           ; preds = %loop-header39
  br label %loop-merge48

post-loop-break41:                                ; No predecessors!
  unreachable

ifmerge42:                                        ; preds = %loop-header39
  %51 = load <4 x float> addrspace(2)* @bigColor1_3, !gla.uniform !10
  %52 = load <4 x float>* %color
  %color43 = fadd <4 x float> %52, %51
  store <4 x float> %color43, <4 x float>* %color
  %53 = load <4 x float>* %color
  %54 = extractelement <4 x float> %53, i32 1
  %55 = load float addrspace(2)* @d4, !gla.uniform !11
  %56 = fcmp olt float %54, %55
  br i1 %56, label %then44, label %ifmerge46

then44:                                           ; preds = %ifmerge42
  br label %loop-merge48

post-loop-break45:                                ; No predecessors!
  unreachable

ifmerge46:                                        ; preds = %ifmerge42
  %57 = load <4 x float> addrspace(2)* @bigColor1_3, !gla.uniform !10
  %58 = load <4 x float>* %color
  %color47 = fadd <4 x float> %58, %57
  store <4 x float> %color47, <4 x float>* %color
  br label %loop-header39

loop-merge48:                                     ; preds = %then44, %then40
  store i32 0, i32* %i
  br label %loop-header49

loop-header49:                                    ; preds = %ifmerge52, %loop-merge48
  %59 = load i32* %i
  %60 = load i32 addrspace(2)* @Count, !gla.uniform !12
  %61 = icmp slt i32 %59, %60
  %62 = xor i1 %61, true
  br i1 %62, label %then50, label %ifmerge52

then50:                                           ; preds = %loop-header49
  br label %loop-merge55

post-loop-break51:                                ; No predecessors!
  unreachable

ifmerge52:                                        ; preds = %loop-header49
  %63 = load <4 x float> addrspace(2)* @bigColor2, !gla.uniform !13
  %64 = load <4 x float>* %color
  %color53 = fadd <4 x float> %64, %63
  store <4 x float> %color53, <4 x float>* %color
  %65 = load i32* %i
  %i54 = add i32 %65, 1
  store i32 %i54, i32* %i
  br label %loop-header49

loop-merge55:                                     ; preds = %then50
  br label %loop-header56

loop-header56:                                    ; preds = %loop-merge55
  br label %loop-body

loop-body:                                        ; preds = %loop-test, %loop-header56
  %66 = load <4 x float> addrspace(2)* @bigColor3, !gla.uniform !14
  %67 = load <4 x float>* %color
  %color57 = fadd <4 x float> %67, %66
  store <4 x float> %color57, <4 x float>* %color
  br label %loop-test

loop-test:                                        ; preds = %loop-body
  %68 = load <4 x float>* %color
  %69 = extractelement <4 x float> %68, i32 0
  %70 = load float addrspace(2)* @d2, !gla.uniform !7
  %71 = fcmp olt float %69, %70
  br i1 %71, label %loop-body, label %loop-merge58

loop-merge58:                                     ; preds = %loop-test
  store i32 0, i32* %i59
  br label %loop-header60

loop-header60:                                    ; preds = %ifmerge63, %loop-merge58
  %72 = load i32* %i59
  %73 = icmp slt i32 %72, 42
  %74 = xor i1 %73, true
  br i1 %74, label %then61, label %ifmerge63

then61:                                           ; preds = %loop-header60
  br label %loop-merge65

post-loop-break62:                                ; No predecessors!
  unreachable

ifmerge63:                                        ; preds = %loop-header60
  %75 = load float addrspace(2)* @d3, !gla.uniform !8
  %76 = load <4 x float>* %color
  %77 = extractelement <4 x float> %76, i32 2
  %78 = fadd float %77, %75
  %79 = getelementptr <4 x float>* %color, i32 0, i32 2
  store float %78, float* %79
  %80 = load i32* %i59
  %i5964 = add i32 %80, 1
  store i32 %i5964, i32* %i59
  br label %loop-header60

loop-merge65:                                     ; preds = %then61
  store i32 0, i32* %i66
  br label %loop-header67

loop-header67:                                    ; preds = %ifmerge76, %loop-merge65
  %81 = load i32* %i66
  %82 = icmp slt i32 %81, 100
  %83 = xor i1 %82, true
  br i1 %83, label %then68, label %ifmerge70

then68:                                           ; preds = %loop-header67
  br label %loop-merge78

post-loop-break69:                                ; No predecessors!
  unreachable

ifmerge70:                                        ; preds = %loop-header67
  %84 = load <4 x float>* %color
  %85 = extractelement <4 x float> %84, i32 2
  %86 = fcmp olt float %85, 2.000000e+01
  br i1 %86, label %then71, label %else

then71:                                           ; preds = %ifmerge70
  %87 = load <4 x float>* %color
  %88 = extractelement <4 x float> %87, i32 0
  %89 = fadd float %88, 1.000000e+00
  %90 = getelementptr <4 x float>* %color, i32 0, i32 0
  store float %89, float* %90
  br label %ifmerge72

else:                                             ; preds = %ifmerge70
  %91 = load <4 x float>* %color
  %92 = extractelement <4 x float> %91, i32 1
  %93 = fadd float %92, 1.000000e+00
  %94 = getelementptr <4 x float>* %color, i32 0, i32 1
  store float %93, float* %94
  br label %ifmerge72

ifmerge72:                                        ; preds = %else, %then71
  %95 = load <4 x float>* %color
  %96 = extractelement <4 x float> %95, i32 3
  %97 = fcmp olt float %96, 2.000000e+01
  br i1 %97, label %then73, label %ifmerge76

then73:                                           ; preds = %ifmerge72
  %98 = load <4 x float>* %color
  %99 = extractelement <4 x float> %98, i32 2
  %100 = load <4 x float>* %color
  %101 = extractelement <4 x float> %100, i32 1
  %102 = fcmp ogt float %99, %101
  br i1 %102, label %then74, label %ifmerge75

then74:                                           ; preds = %then73
  br label %ifmerge75

ifmerge75:                                        ; preds = %then73, %then74
  br label %ifmerge76

ifmerge76:                                        ; preds = %ifmerge72, %ifmerge75
  %103 = load i32* %i66
  %i6677 = add i32 %103, 1
  store i32 %i6677, i32* %i66
  br label %loop-header67

loop-merge78:                                     ; preds = %then68
  store i32 0, i32* %i79
  br label %loop-header80

loop-header80:                                    ; preds = %ifmerge86, %loop-merge78
  %104 = load i32* %i79
  %105 = icmp slt i32 %104, 120
  %106 = xor i1 %105, true
  br i1 %106, label %then81, label %ifmerge83

then81:                                           ; preds = %loop-header80
  br label %loop-merge88

post-loop-break82:                                ; No predecessors!
  unreachable

ifmerge83:                                        ; preds = %loop-header80
  %107 = load <4 x float>* %color
  %108 = extractelement <4 x float> %107, i32 2
  %109 = fcmp olt float %108, 2.000000e+01
  br i1 %109, label %then84, label %else85

then84:                                           ; preds = %ifmerge83
  %110 = load <4 x float>* %color
  %111 = extractelement <4 x float> %110, i32 0
  %112 = fadd float %111, 1.000000e+00
  %113 = getelementptr <4 x float>* %color, i32 0, i32 0
  store float %112, float* %113
  br label %ifmerge86

else85:                                           ; preds = %ifmerge83
  %114 = load <4 x float>* %color
  %115 = extractelement <4 x float> %114, i32 1
  %116 = fadd float %115, 1.000000e+00
  %117 = getelementptr <4 x float>* %color, i32 0, i32 1
  store float %116, float* %117
  br label %ifmerge86

ifmerge86:                                        ; preds = %else85, %then84
  %118 = load i32* %i79
  %i7987 = add i32 %118, 1
  store i32 %i7987, i32* %i79
  br label %loop-header80

loop-merge88:                                     ; preds = %then81
  store i32 0, i32* %i89
  br label %loop-header90

loop-header90:                                    ; preds = %ifmerge97, %then94, %loop-merge88
  %119 = load i32* %i89
  %120 = icmp slt i32 %119, 42
  %121 = xor i1 %120, true
  br i1 %121, label %then91, label %ifmerge93

then91:                                           ; preds = %loop-header90
  br label %loop-merge99

post-loop-break92:                                ; No predecessors!
  unreachable

ifmerge93:                                        ; preds = %loop-header90
  %122 = load float addrspace(2)* @d3, !gla.uniform !8
  %123 = load <4 x float>* %color
  %124 = extractelement <4 x float> %123, i32 2
  %125 = fadd float %124, %122
  %126 = getelementptr <4 x float>* %color, i32 0, i32 2
  store float %125, float* %126
  %127 = load <4 x float>* %color
  %128 = extractelement <4 x float> %127, i32 0
  %129 = load float addrspace(2)* @d4, !gla.uniform !11
  %130 = fcmp olt float %128, %129
  br i1 %130, label %then94, label %ifmerge97

then94:                                           ; preds = %ifmerge93
  %131 = load i32* %i89
  %i8995 = add i32 %131, 1
  store i32 %i8995, i32* %i89
  br label %loop-header90

post-loop-continue96:                             ; No predecessors!
  unreachable

ifmerge97:                                        ; preds = %ifmerge93
  %132 = load <4 x float>* %color
  %133 = extractelement <4 x float> %132, i32 3
  %134 = fadd float %133, 1.000000e+00
  %135 = getelementptr <4 x float>* %color, i32 0, i32 3
  store float %134, float* %135
  %136 = load i32* %i89
  %i8998 = add i32 %136, 1
  store i32 %i8998, i32* %i89
  br label %loop-header90

loop-merge99:                                     ; preds = %then91
  store i32 0, i32* %i100
  br label %loop-header101

loop-header101:                                   ; preds = %ifmerge107, %loop-merge99
  %137 = load i32* %i100
  %138 = icmp slt i32 %137, 42
  %139 = xor i1 %138, true
  br i1 %139, label %then102, label %ifmerge104

then102:                                          ; preds = %loop-header101
  br label %loop-merge109

post-loop-break103:                               ; No predecessors!
  unreachable

ifmerge104:                                       ; preds = %loop-header101
  %140 = load float addrspace(2)* @d3, !gla.uniform !8
  %141 = load <4 x float>* %color
  %142 = extractelement <4 x float> %141, i32 2
  %143 = fadd float %142, %140
  %144 = getelementptr <4 x float>* %color, i32 0, i32 2
  store float %143, float* %144
  %145 = load <4 x float>* %color
  %146 = extractelement <4 x float> %145, i32 0
  %147 = load float addrspace(2)* @d4, !gla.uniform !11
  %148 = fcmp olt float %146, %147
  br i1 %148, label %then105, label %ifmerge107

then105:                                          ; preds = %ifmerge104
  br label %loop-merge109

post-loop-break106:                               ; No predecessors!
  unreachable

ifmerge107:                                       ; preds = %ifmerge104
  %149 = load <4 x float>* %color
  %150 = extractelement <4 x float> %149, i32 3
  %151 = fadd float %150, 1.000000e+00
  %152 = getelementptr <4 x float>* %color, i32 0, i32 3
  store float %151, float* %152
  %153 = load i32* %i100
  %i100108 = add i32 %153, 1
  store i32 %i100108, i32* %i100
  br label %loop-header101

loop-merge109:                                    ; preds = %then105, %then102
  br label %loop-header110

loop-header110:                                   ; preds = %loop-merge109
  br label %loop-body111

loop-body111:                                     ; preds = %loop-test119, %loop-header110
  %154 = load <4 x float> addrspace(2)* @bigColor4, !gla.uniform !15
  %155 = load <4 x float>* %color
  %color112 = fadd <4 x float> %155, %154
  store <4 x float> %color112, <4 x float>* %color
  %156 = load <4 x float>* %color
  %157 = extractelement <4 x float> %156, i32 0
  %158 = load float addrspace(2)* @d4, !gla.uniform !11
  %159 = fcmp olt float %157, %158
  br i1 %159, label %then113, label %ifmerge115

then113:                                          ; preds = %loop-body111
  br label %loop-test119

post-loop-continue114:                            ; No predecessors!
  unreachable

ifmerge115:                                       ; preds = %loop-body111
  %160 = load <4 x float>* %color
  %161 = extractelement <4 x float> %160, i32 1
  %162 = load float addrspace(2)* @d4, !gla.uniform !11
  %163 = fcmp olt float %161, %162
  br i1 %163, label %then116, label %else117

then116:                                          ; preds = %ifmerge115
  %164 = load float addrspace(2)* @d4, !gla.uniform !11
  %165 = load <4 x float>* %color
  %166 = extractelement <4 x float> %165, i32 1
  %167 = fadd float %166, %164
  %168 = getelementptr <4 x float>* %color, i32 0, i32 1
  store float %167, float* %168
  br label %ifmerge118

else117:                                          ; preds = %ifmerge115
  %169 = load float addrspace(2)* @d4, !gla.uniform !11
  %170 = load <4 x float>* %color
  %171 = extractelement <4 x float> %170, i32 0
  %172 = fadd float %171, %169
  %173 = getelementptr <4 x float>* %color, i32 0, i32 0
  store float %172, float* %173
  br label %ifmerge118

ifmerge118:                                       ; preds = %else117, %then116
  br label %loop-test119

loop-test119:                                     ; preds = %ifmerge118, %then113
  %174 = load <4 x float>* %color
  %175 = extractelement <4 x float> %174, i32 2
  %176 = load float addrspace(2)* @d4, !gla.uniform !11
  %177 = fcmp olt float %175, %176
  br i1 %177, label %loop-body111, label %loop-merge120

loop-merge120:                                    ; preds = %loop-test119
  br label %loop-header121

loop-header121:                                   ; preds = %loop-merge120
  br label %loop-body122

loop-body122:                                     ; preds = %loop-test126, %loop-header121
  %178 = load <4 x float> addrspace(2)* @bigColor5, !gla.uniform !16
  %179 = load <4 x float>* %color
  %color123 = fadd <4 x float> %179, %178
  store <4 x float> %color123, <4 x float>* %color
  %180 = load <4 x float>* %color
  %181 = extractelement <4 x float> %180, i32 1
  %182 = load float addrspace(2)* @d5, !gla.uniform !17
  %183 = fcmp olt float %181, %182
  br i1 %183, label %then124, label %ifmerge125

then124:                                          ; preds = %loop-body122
  %184 = load float addrspace(2)* @d5, !gla.uniform !17
  %185 = load <4 x float>* %color
  %186 = extractelement <4 x float> %185, i32 1
  %187 = fadd float %186, %184
  %188 = getelementptr <4 x float>* %color, i32 0, i32 1
  store float %187, float* %188
  br label %ifmerge125

ifmerge125:                                       ; preds = %loop-body122, %then124
  br label %loop-test126

loop-test126:                                     ; preds = %ifmerge125
  %189 = load <4 x float>* %color
  %190 = extractelement <4 x float> %189, i32 0
  %191 = load float addrspace(2)* @d5, !gla.uniform !17
  %192 = fcmp olt float %190, %191
  br i1 %192, label %loop-body122, label %loop-merge127

loop-merge127:                                    ; preds = %loop-test126
  %193 = load <4 x float>* %color
  %194 = extractelement <4 x float> %193, i32 0
  %195 = load float addrspace(2)* @d6, !gla.uniform !18
  %196 = fcmp olt float %194, %195
  br i1 %196, label %then128, label %else135

then128:                                          ; preds = %loop-merge127
  br label %loop-header129

loop-header129:                                   ; preds = %ifmerge132, %then128
  %197 = load <4 x float>* %color
  %198 = extractelement <4 x float> %197, i32 1
  %199 = load float addrspace(2)* @d6, !gla.uniform !18
  %200 = fcmp olt float %198, %199
  %201 = xor i1 %200, true
  br i1 %201, label %then130, label %ifmerge132

then130:                                          ; preds = %loop-header129
  br label %loop-merge134

post-loop-break131:                               ; No predecessors!
  unreachable

ifmerge132:                                       ; preds = %loop-header129
  %202 = load <4 x float> addrspace(2)* @bigColor6, !gla.uniform !19
  %203 = load <4 x float>* %color
  %color133 = fadd <4 x float> %203, %202
  store <4 x float> %color133, <4 x float>* %color
  br label %loop-header129

loop-merge134:                                    ; preds = %then130
  br label %ifmerge141

else135:                                          ; preds = %loop-merge127
  br label %loop-header136

loop-header136:                                   ; preds = %ifmerge139, %else135
  %204 = load <4 x float>* %color
  %205 = extractelement <4 x float> %204, i32 2
  %206 = load float addrspace(2)* @d6, !gla.uniform !18
  %207 = fcmp olt float %205, %206
  %208 = xor i1 %207, true
  br i1 %208, label %then137, label %ifmerge139

then137:                                          ; preds = %loop-header136
  br label %loop-merge140

post-loop-break138:                               ; No predecessors!
  unreachable

ifmerge139:                                       ; preds = %loop-header136
  %209 = load <4 x float> addrspace(2)* @bigColor6, !gla.uniform !19
  %210 = extractelement <4 x float> %209, i32 2
  %211 = load <4 x float>* %color
  %212 = extractelement <4 x float> %211, i32 2
  %213 = fadd float %212, %210
  %214 = getelementptr <4 x float>* %color, i32 0, i32 2
  store float %213, float* %214
  br label %loop-header136

loop-merge140:                                    ; preds = %then137
  br label %ifmerge141

ifmerge141:                                       ; preds = %loop-merge140, %loop-merge134
  %215 = load <4 x float>* %color
  %216 = extractelement <4 x float> %215, i32 0
  %217 = load float addrspace(2)* @d6, !gla.uniform !18
  %218 = fcmp olt float %216, %217
  br i1 %218, label %then142, label %else152

then142:                                          ; preds = %ifmerge141
  br label %loop-header143

loop-header143:                                   ; preds = %ifmerge150, %then142
  %219 = load <4 x float>* %color
  %220 = extractelement <4 x float> %219, i32 1
  %221 = load float addrspace(2)* @d6, !gla.uniform !18
  %222 = fcmp olt float %220, %221
  %223 = xor i1 %222, true
  br i1 %223, label %then144, label %ifmerge146

then144:                                          ; preds = %loop-header143
  br label %loop-merge151

post-loop-break145:                               ; No predecessors!
  unreachable

ifmerge146:                                       ; preds = %loop-header143
  %224 = load <4 x float> addrspace(2)* @bigColor6, !gla.uniform !19
  %225 = load <4 x float>* %color
  %color147 = fadd <4 x float> %225, %224
  store <4 x float> %color147, <4 x float>* %color
  %226 = load float addrspace(2)* @d7, !gla.uniform !20
  %227 = fcmp olt float %226, 1.000000e+00
  br i1 %227, label %then148, label %ifmerge150

then148:                                          ; preds = %ifmerge146
  br label %loop-merge151

post-loop-break149:                               ; No predecessors!
  unreachable

ifmerge150:                                       ; preds = %ifmerge146
  br label %loop-header143

loop-merge151:                                    ; preds = %then148, %then144
  br label %ifmerge158

else152:                                          ; preds = %ifmerge141
  br label %loop-header153

loop-header153:                                   ; preds = %ifmerge156, %else152
  %228 = load <4 x float>* %color
  %229 = extractelement <4 x float> %228, i32 2
  %230 = load float addrspace(2)* @d6, !gla.uniform !18
  %231 = fcmp olt float %229, %230
  %232 = xor i1 %231, true
  br i1 %232, label %then154, label %ifmerge156

then154:                                          ; preds = %loop-header153
  br label %loop-merge157

post-loop-break155:                               ; No predecessors!
  unreachable

ifmerge156:                                       ; preds = %loop-header153
  %233 = load <4 x float> addrspace(2)* @bigColor6, !gla.uniform !19
  %234 = extractelement <4 x float> %233, i32 2
  %235 = load <4 x float>* %color
  %236 = extractelement <4 x float> %235, i32 2
  %237 = fadd float %236, %234
  %238 = getelementptr <4 x float>* %color, i32 0, i32 2
  store float %237, float* %238
  br label %loop-header153

loop-merge157:                                    ; preds = %then154
  br label %ifmerge158

ifmerge158:                                       ; preds = %loop-merge157, %loop-merge151
  br label %loop-header159

loop-header159:                                   ; preds = %ifmerge158
  br label %loop-body160

loop-body160:                                     ; preds = %loop-test169, %loop-header159
  %239 = load float addrspace(2)* @d7, !gla.uniform !20
  %240 = fcmp olt float %239, 0.000000e+00
  br i1 %240, label %then161, label %ifmerge163

then161:                                          ; preds = %loop-body160
  br label %loop-merge170

post-loop-break162:                               ; No predecessors!
  unreachable

ifmerge163:                                       ; preds = %loop-body160
  %241 = load <4 x float> addrspace(2)* @bigColor7, !gla.uniform !21
  %242 = load <4 x float>* %color
  %color164 = fadd <4 x float> %242, %241
  store <4 x float> %color164, <4 x float>* %color
  %243 = load float addrspace(2)* @d7, !gla.uniform !20
  %244 = fcmp olt float %243, 1.000000e+00
  br i1 %244, label %then165, label %ifmerge167

then165:                                          ; preds = %ifmerge163
  %245 = load <4 x float>* %color
  %246 = extractelement <4 x float> %245, i32 2
  %247 = fadd float %246, 1.000000e+00
  %248 = getelementptr <4 x float>* %color, i32 0, i32 2
  store float %247, float* %248
  br label %loop-merge170

post-loop-break166:                               ; No predecessors!
  unreachable

ifmerge167:                                       ; preds = %ifmerge163
  %249 = load <4 x float>* @BaseColor
  %250 = load <4 x float>* %color
  %color168 = fadd <4 x float> %250, %249
  store <4 x float> %color168, <4 x float>* %color
  br label %loop-test169

loop-test169:                                     ; preds = %ifmerge167
  br i1 true, label %loop-body160, label %loop-merge170

loop-merge170:                                    ; preds = %loop-test169, %then165, %then161
  br label %loop-header171

loop-header171:                                   ; preds = %loop-merge170
  br label %loop-body172

loop-body172:                                     ; preds = %loop-test184, %loop-header171
  %251 = load float addrspace(2)* @d8, !gla.uniform !22
  %252 = fcmp olt float %251, 0.000000e+00
  br i1 %252, label %then173, label %ifmerge175

then173:                                          ; preds = %loop-body172
  br label %loop-merge185

post-loop-break174:                               ; No predecessors!
  unreachable

ifmerge175:                                       ; preds = %loop-body172
  %253 = load <4 x float> addrspace(2)* @bigColor7, !gla.uniform !21
  %254 = load <4 x float>* %color
  %color176 = fadd <4 x float> %254, %253
  store <4 x float> %color176, <4 x float>* %color
  %255 = load float addrspace(2)* @d8, !gla.uniform !22
  %256 = fcmp olt float %255, 1.000000e+00
  br i1 %256, label %then177, label %ifmerge182

then177:                                          ; preds = %ifmerge175
  %257 = load <4 x float>* %color
  %258 = extractelement <4 x float> %257, i32 2
  %259 = fadd float %258, 1.000000e+00
  %260 = getelementptr <4 x float>* %color, i32 0, i32 2
  store float %259, float* %260
  %261 = load float addrspace(2)* @d8, !gla.uniform !22
  %262 = fcmp olt float %261, 2.000000e+00
  br i1 %262, label %then178, label %else179

then178:                                          ; preds = %then177
  %263 = load <4 x float>* %color
  %264 = extractelement <4 x float> %263, i32 1
  %265 = fadd float %264, 1.000000e+00
  %266 = getelementptr <4 x float>* %color, i32 0, i32 1
  store float %265, float* %266
  br label %ifmerge180

else179:                                          ; preds = %then177
  %267 = load <4 x float>* %color
  %268 = extractelement <4 x float> %267, i32 0
  %269 = fadd float %268, 1.000000e+00
  %270 = getelementptr <4 x float>* %color, i32 0, i32 0
  store float %269, float* %270
  br label %ifmerge180

ifmerge180:                                       ; preds = %else179, %then178
  br label %loop-merge185

post-loop-break181:                               ; No predecessors!
  unreachable

ifmerge182:                                       ; preds = %ifmerge175
  %271 = load <4 x float>* @BaseColor
  %272 = load <4 x float>* %color
  %color183 = fadd <4 x float> %272, %271
  store <4 x float> %color183, <4 x float>* %color
  br label %loop-test184

loop-test184:                                     ; preds = %ifmerge182
  %273 = load <4 x float>* %color
  %274 = extractelement <4 x float> %273, i32 2
  %275 = load float addrspace(2)* @d8, !gla.uniform !22
  %276 = fcmp olt float %274, %275
  br i1 %276, label %loop-body172, label %loop-merge185

loop-merge185:                                    ; preds = %loop-test184, %ifmerge180, %then173
  br label %loop-header186

loop-header186:                                   ; preds = %ifmerge197, %loop-merge185
  %277 = load <4 x float>* %color
  %278 = extractelement <4 x float> %277, i32 3
  %279 = load float addrspace(2)* @d9, !gla.uniform !23
  %280 = fcmp olt float %278, %279
  %281 = xor i1 %280, true
  br i1 %281, label %then187, label %ifmerge189

then187:                                          ; preds = %loop-header186
  br label %loop-merge198

post-loop-break188:                               ; No predecessors!
  unreachable

ifmerge189:                                       ; preds = %loop-header186
  %282 = load float addrspace(2)* @d9, !gla.uniform !23
  %283 = load float addrspace(2)* @d8, !gla.uniform !22
  %284 = fcmp ogt float %282, %283
  br i1 %284, label %then190, label %ifmerge197

then190:                                          ; preds = %ifmerge189
  %285 = load <4 x float>* %color
  %286 = extractelement <4 x float> %285, i32 0
  %287 = load float addrspace(2)* @d7, !gla.uniform !20
  %288 = fcmp ole float %286, %287
  br i1 %288, label %then191, label %ifmerge196

then191:                                          ; preds = %then190
  %289 = load <4 x float>* %color
  %290 = extractelement <4 x float> %289, i32 2
  %291 = fcmp oeq float %290, 5.000000e+00
  br i1 %291, label %then192, label %else193

then192:                                          ; preds = %then191
  %292 = load <4 x float>* %color
  %293 = extractelement <4 x float> %292, i32 3
  %294 = fadd float %293, 1.000000e+00
  %295 = getelementptr <4 x float>* %color, i32 0, i32 3
  store float %294, float* %295
  br label %ifmerge195

else193:                                          ; preds = %then191
  br label %loop-merge198

post-loop-break194:                               ; No predecessors!
  unreachable

ifmerge195:                                       ; preds = %then192
  br label %ifmerge196

ifmerge196:                                       ; preds = %then190, %ifmerge195
  br label %ifmerge197

ifmerge197:                                       ; preds = %ifmerge189, %ifmerge196
  br label %loop-header186

loop-merge198:                                    ; preds = %else193, %then187
  br label %loop-header199

loop-header199:                                   ; preds = %ifmerge206, %loop-merge198
  %296 = load <4 x float>* %color
  %297 = extractelement <4 x float> %296, i32 2
  %298 = load float addrspace(2)* @d10, !gla.uniform !24
  %299 = fcmp olt float %297, %298
  %300 = xor i1 %299, true
  br i1 %300, label %then200, label %ifmerge202

then200:                                          ; preds = %loop-header199
  br label %loop-merge211

post-loop-break201:                               ; No predecessors!
  unreachable

ifmerge202:                                       ; preds = %loop-header199
  %301 = load <4 x float>* %color
  %302 = extractelement <4 x float> %301, i32 1
  %303 = fadd float %302, 1.000000e+00
  %304 = getelementptr <4 x float>* %color, i32 0, i32 1
  store float %303, float* %304
  %305 = load <4 x float>* %color
  %306 = extractelement <4 x float> %305, i32 1
  %307 = load float addrspace(2)* @d11, !gla.uniform !25
  %308 = fcmp olt float %306, %307
  br i1 %308, label %then203, label %ifmerge208

then203:                                          ; preds = %ifmerge202
  %309 = load <4 x float>* %color
  %310 = extractelement <4 x float> %309, i32 2
  %311 = fadd float %310, 1.000000e+00
  %312 = getelementptr <4 x float>* %color, i32 0, i32 2
  store float %311, float* %312
  %313 = load <4 x float>* %color
  %314 = extractelement <4 x float> %313, i32 3
  %315 = load float addrspace(2)* @d12, !gla.uniform !26
  %316 = fcmp olt float %314, %315
  br i1 %316, label %then204, label %else205

then204:                                          ; preds = %then203
  %317 = load <4 x float>* %color
  %318 = extractelement <4 x float> %317, i32 3
  %319 = fadd float %318, 1.000000e+00
  %320 = getelementptr <4 x float>* %color, i32 0, i32 3
  store float %319, float* %320
  br label %ifmerge206

else205:                                          ; preds = %then203
  %321 = load <4 x float>* %color
  %322 = extractelement <4 x float> %321, i32 0
  %323 = fadd float %322, 1.000000e+00
  %324 = getelementptr <4 x float>* %color, i32 0, i32 0
  store float %323, float* %324
  br label %ifmerge206

ifmerge206:                                       ; preds = %else205, %then204
  br label %loop-header199

post-loop-continue207:                            ; No predecessors!
  unreachable

ifmerge208:                                       ; preds = %ifmerge202
  %325 = load <4 x float>* %color
  %color209 = fadd <4 x float> %325, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color209, <4 x float>* %color
  br label %loop-merge211

post-loop-break210:                               ; No predecessors!
  unreachable

loop-merge211:                                    ; preds = %ifmerge208, %then200
  br label %loop-header212

loop-header212:                                   ; preds = %ifmerge221, %then218, %loop-merge211
  %326 = load <4 x float>* %color
  %327 = extractelement <4 x float> %326, i32 0
  %328 = fcmp olt float %327, 1.000000e+01
  %329 = xor i1 %328, true
  br i1 %329, label %then213, label %ifmerge215

then213:                                          ; preds = %loop-header212
  br label %loop-merge222

post-loop-break214:                               ; No predecessors!
  unreachable

ifmerge215:                                       ; preds = %loop-header212
  %330 = load <4 x float> addrspace(2)* @bigColor8, !gla.uniform !27
  %331 = load <4 x float>* %color
  %color216 = fadd <4 x float> %331, %330
  store <4 x float> %color216, <4 x float>* %color
  %332 = load <4 x float>* %color
  %333 = extractelement <4 x float> %332, i32 2
  %334 = load float addrspace(2)* @d8, !gla.uniform !22
  %335 = fcmp olt float %333, %334
  br i1 %335, label %then217, label %ifmerge221

then217:                                          ; preds = %ifmerge215
  %336 = load <4 x float>* %color
  %337 = extractelement <4 x float> %336, i32 3
  %338 = load float addrspace(2)* @d6, !gla.uniform !18
  %339 = fcmp olt float %337, %338
  br i1 %339, label %then218, label %ifmerge220

then218:                                          ; preds = %then217
  br label %loop-header212

post-loop-continue219:                            ; No predecessors!
  unreachable

ifmerge220:                                       ; preds = %then217
  br label %ifmerge221

ifmerge221:                                       ; preds = %ifmerge215, %ifmerge220
  %340 = load <4 x float> addrspace(2)* @bigColor8, !gla.uniform !27
  %341 = extractelement <4 x float> %340, i32 0
  %342 = load <4 x float>* %color
  %343 = extractelement <4 x float> %342, i32 1
  %344 = fadd float %343, %341
  %345 = getelementptr <4 x float>* %color, i32 0, i32 1
  store float %344, float* %345
  br label %loop-header212

loop-merge222:                                    ; preds = %then213
  %346 = load <4 x float>* %color
  %color223 = fadd <4 x float> %346, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color223, <4 x float>* %color
  %gl_FragColor = load <4 x float>* %color
  store <4 x float> %gl_FragColor, <4 x float>* @gl_FragColor
  br label %loop-header224

loop-header224:                                   ; preds = %ifmerge231, %loop-merge222
  %347 = load <4 x float>* %color
  %348 = extractelement <4 x float> %347, i32 0
  %349 = load float addrspace(2)* @d14, !gla.uniform !28
  %350 = fcmp olt float %348, %349
  %351 = xor i1 %350, true
  br i1 %351, label %then225, label %ifmerge227

then225:                                          ; preds = %loop-header224
  br label %loop-merge232

post-loop-break226:                               ; No predecessors!
  unreachable

ifmerge227:                                       ; preds = %loop-header224
  %352 = load <4 x float>* %color
  %353 = extractelement <4 x float> %352, i32 1
  %354 = load float addrspace(2)* @d15, !gla.uniform !29
  %355 = fcmp olt float %353, %354
  br i1 %355, label %then228, label %else229

then228:                                          ; preds = %ifmerge227
  br label %stage-epilogue

post-return:                                      ; No predecessors!
  unreachable

else229:                                          ; preds = %ifmerge227
  %356 = load <4 x float>* %color
  %color230 = fadd <4 x float> %356, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color230, <4 x float>* %color
  br label %ifmerge231

ifmerge231:                                       ; preds = %else229
  br label %loop-header224

loop-merge232:                                    ; preds = %then225
  %357 = load <4 x float>* %color
  %color233 = fadd <4 x float> %357, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color233, <4 x float>* %color
  br label %loop-header234

loop-header234:                                   ; preds = %ifmerge237, %loop-merge232
  %358 = load <4 x float>* %color
  %359 = extractelement <4 x float> %358, i32 3
  %360 = load float addrspace(2)* @d16, !gla.uniform !30
  %361 = fcmp olt float %359, %360
  %362 = xor i1 %361, true
  br i1 %362, label %then235, label %ifmerge237

then235:                                          ; preds = %loop-header234
  br label %loop-merge238

post-loop-break236:                               ; No predecessors!
  unreachable

ifmerge237:                                       ; preds = %loop-header234
  %363 = load <4 x float>* %color
  %364 = extractelement <4 x float> %363, i32 3
  %365 = fadd float %364, 1.000000e+00
  %366 = getelementptr <4 x float>* %color, i32 0, i32 3
  store float %365, float* %366
  br label %loop-header234

loop-merge238:                                    ; preds = %then235
  br label %loop-header239

loop-header239:                                   ; preds = %ifmerge246, %loop-merge238
  %367 = load <4 x float>* %color
  %368 = extractelement <4 x float> %367, i32 3
  %369 = load float addrspace(2)* @d2, !gla.uniform !7
  %370 = fcmp olt float %368, %369
  %371 = load <4 x float>* %color
  %372 = extractelement <4 x float> %371, i32 1
  %373 = load float addrspace(2)* @d3, !gla.uniform !8
  %374 = fcmp olt float %372, %373
  %375 = and i1 %370, %374
  %376 = xor i1 %375, true
  br i1 %376, label %then240, label %ifmerge242

then240:                                          ; preds = %loop-header239
  br label %loop-merge247

post-loop-break241:                               ; No predecessors!
  unreachable

ifmerge242:                                       ; preds = %loop-header239
  %377 = load <4 x float> addrspace(2)* @bigColor1_2, !gla.uniform !9
  %378 = load <4 x float>* %color
  %color243 = fadd <4 x float> %378, %377
  store <4 x float> %color243, <4 x float>* %color
  %379 = load <4 x float>* %color
  %380 = extractelement <4 x float> %379, i32 2
  %381 = load float addrspace(2)* @d3, !gla.uniform !8
  %382 = fcmp olt float %380, %381
  br i1 %382, label %then244, label %ifmerge246

then244:                                          ; preds = %ifmerge242
  br label %stage-epilogue

post-return245:                                   ; No predecessors!
  unreachable

ifmerge246:                                       ; preds = %ifmerge242
  br label %loop-header239

loop-merge247:                                    ; preds = %then240
  br label %loop-header248

loop-header248:                                   ; preds = %loop-merge247
  br label %loop-body249

loop-body249:                                     ; preds = %loop-test254, %loop-header248
  %383 = load <4 x float>* %color
  %384 = extractelement <4 x float> %383, i32 1
  %385 = load float addrspace(2)* @d18, !gla.uniform !31
  %386 = fcmp olt float %384, %385
  br i1 %386, label %then250, label %ifmerge252

then250:                                          ; preds = %loop-body249
  br label %stage-epilogue

post-return251:                                   ; No predecessors!
  unreachable

ifmerge252:                                       ; preds = %loop-body249
  %387 = load <4 x float>* %color
  %color253 = fadd <4 x float> %387, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color253, <4 x float>* %color
  br label %loop-test254

loop-test254:                                     ; preds = %ifmerge252
  %388 = load <4 x float>* %color
  %389 = extractelement <4 x float> %388, i32 0
  %390 = load float addrspace(2)* @d17, !gla.uniform !32
  %391 = fcmp olt float %389, %390
  br i1 %391, label %loop-body249, label %loop-merge255

loop-merge255:                                    ; preds = %loop-test254
  br label %loop-header256

loop-header256:                                   ; preds = %ifmerge263, %loop-merge255
  %392 = load <4 x float>* %color
  %393 = extractelement <4 x float> %392, i32 1
  %394 = load float addrspace(2)* @d16, !gla.uniform !30
  %395 = fcmp olt float %393, %394
  %396 = xor i1 %395, true
  br i1 %396, label %then257, label %ifmerge259

then257:                                          ; preds = %loop-header256
  br label %loop-merge264

post-loop-break258:                               ; No predecessors!
  unreachable

ifmerge259:                                       ; preds = %loop-header256
  %397 = load <4 x float>* %color
  %398 = extractelement <4 x float> %397, i32 3
  %399 = load float addrspace(2)* @d16, !gla.uniform !30
  %400 = fcmp olt float %398, %399
  br i1 %400, label %then260, label %else261

then260:                                          ; preds = %ifmerge259
  call void @llvm.gla.discard()
  br label %stage-exit

post-discard:                                     ; No predecessors!
  unreachable

else261:                                          ; preds = %ifmerge259
  %401 = load <4 x float>* %color
  %color262 = fadd <4 x float> %401, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color262, <4 x float>* %color
  br label %ifmerge263

ifmerge263:                                       ; preds = %else261
  br label %loop-header256

loop-merge264:                                    ; preds = %then257
  %402 = load <4 x float>* %color
  %color265 = fadd <4 x float> %402, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color265, <4 x float>* %color
  %gl_FragColor266 = load <4 x float>* %color
  store <4 x float> %gl_FragColor266, <4 x float>* @gl_FragColor
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %loop-merge264, %then250, %then244, %then228
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue, %then260
  ret void
}

; Function Attrs: nounwind
declare void @llvm.gla.discard() #0

attributes #0 = { nounwind }

!gla.entrypoint = !{!0}
!gla.inputs = !{!1}
!gla.uniforms = !{!3, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}
!gla.outputs = !{!50}
!gla.noStaticUse = !{!33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}

!0 = !{!"main", i32 15}
!1 = !{!"BaseColor", i32 1, <4 x float>* @BaseColor_typeProxy, !2}
!2 = !{i32 0, i32 0, i32 1024, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"d", i32 12, float* @d_typeProxy, !4}
!4 = !{i32 0, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!5 = !{!"bigColor", i32 12, <4 x float>* @bigColor_typeProxy, !4}
!6 = !{!"bigColor1_1", i32 12, <4 x float>* @bigColor1_1_typeProxy, !4}
!7 = !{!"d2", i32 12, float* @d2_typeProxy, !4}
!8 = !{!"d3", i32 12, float* @d3_typeProxy, !4}
!9 = !{!"bigColor1_2", i32 12, <4 x float>* @bigColor1_2_typeProxy, !4}
!10 = !{!"bigColor1_3", i32 12, <4 x float>* @bigColor1_3_typeProxy, !4}
!11 = !{!"d4", i32 12, float* @d4_typeProxy, !4}
!12 = !{!"Count", i32 12, i32* @Count_typeProxy, !4}
!13 = !{!"bigColor2", i32 12, <4 x float>* @bigColor2_typeProxy, !4}
!14 = !{!"bigColor3", i32 12, <4 x float>* @bigColor3_typeProxy, !4}
!15 = !{!"bigColor4", i32 12, <4 x float>* @bigColor4_typeProxy, !4}
!16 = !{!"bigColor5", i32 12, <4 x float>* @bigColor5_typeProxy, !4}
!17 = !{!"d5", i32 12, float* @d5_typeProxy, !4}
!18 = !{!"d6", i32 12, float* @d6_typeProxy, !4}
!19 = !{!"bigColor6", i32 12, <4 x float>* @bigColor6_typeProxy, !4}
!20 = !{!"d7", i32 12, float* @d7_typeProxy, !4}
!21 = !{!"bigColor7", i32 12, <4 x float>* @bigColor7_typeProxy, !4}
!22 = !{!"d8", i32 12, float* @d8_typeProxy, !4}
!23 = !{!"d9", i32 12, float* @d9_typeProxy, !4}
!24 = !{!"d10", i32 12, float* @d10_typeProxy, !4}
!25 = !{!"d11", i32 12, float* @d11_typeProxy, !4}
!26 = !{!"d12", i32 12, float* @d12_typeProxy, !4}
!27 = !{!"bigColor8", i32 12, <4 x float>* @bigColor8_typeProxy, !4}
!28 = !{!"d14", i32 12, float* @d14_typeProxy, !4}
!29 = !{!"d15", i32 12, float* @d15_typeProxy, !4}
!30 = !{!"d16", i32 12, float* @d16_typeProxy, !4}
!31 = !{!"d18", i32 12, float* @d18_typeProxy, !4}
!32 = !{!"d17", i32 12, float* @d17_typeProxy, !4}
!33 = !{!"d13", i32 12, float* @d13_typeProxy, !4}
!34 = !{!"d19", i32 12, float* @d19_typeProxy, !4}
!35 = !{!"d20", i32 12, float* @d20_typeProxy, !4}
!36 = !{!"d21", i32 12, float* @d21_typeProxy, !4}
!37 = !{!"d22", i32 12, float* @d22_typeProxy, !4}
!38 = !{!"d23", i32 12, float* @d23_typeProxy, !4}
!39 = !{!"d24", i32 12, float* @d24_typeProxy, !4}
!40 = !{!"d25", i32 12, float* @d25_typeProxy, !4}
!41 = !{!"d26", i32 12, float* @d26_typeProxy, !4}
!42 = !{!"d27", i32 12, float* @d27_typeProxy, !4}
!43 = !{!"d28", i32 12, float* @d28_typeProxy, !4}
!44 = !{!"d29", i32 12, float* @d29_typeProxy, !4}
!45 = !{!"d30", i32 12, float* @d30_typeProxy, !4}
!46 = !{!"d31", i32 12, float* @d31_typeProxy, !4}
!47 = !{!"d32", i32 12, float* @d32_typeProxy, !4}
!48 = !{!"d33", i32 12, float* @d33_typeProxy, !4}
!49 = !{!"d34", i32 12, float* @d34_typeProxy, !4}
!50 = !{!"gl_FragColor", i32 7, <4 x float>* @gl_FragColor_typeProxy, !51}
!51 = !{i32 0, i32 0, i32 1025, null, i32 0, i32 43, i32 -1, i32 0, i32 -1}
LunarGOO: /home/greg/ss/LunarGLASS.36/Core/LLVM/llvm-3.6.2/lib/Analysis/ScalarEvolution.cpp:4391: unsigned int llvm::ScalarEvolution::getSmallConstantTripCount(llvm::Loop*, llvm::BasicBlock*): Assertion `L->isLoopExiting(ExitingBlock) && "Exiting block must actually branch out of the loop!"' failed.
