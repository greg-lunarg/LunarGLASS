
Top IR:
; ModuleID = 'Glslang'

%gl_PerVertex = type { [3 x float] }
%boundblock = type { i32 }
%anonblock = type { i32 }

@"anon@0" = global %gl_PerVertex zeroinitializer
@bad = global [10 x <4 x float>] zeroinitializer
@badorder3 = global <4 x float> zeroinitializer
@f = external addrspace(2) constant float
@uv4 = external addrspace(2) constant <4 x float>
@badorder = global <4 x float> zeroinitializer
@badorder2 = global <4 x float> zeroinitializer
@boundInst = external addrspace(2) constant %boundblock
@"anon@1" = external addrspace(2) constant %anonblock
@sampb1 = external addrspace(1) constant i32
@sampb2 = external addrspace(1) constant [10 x i32]
@sampb4 = external addrspace(1) constant i32
@gl_VertexID = global i32 0
@gl_InstanceID = global i32 0

define fastcc void @main() {
entry:
  %dx = alloca float
  %cx = alloca float
  br label %mainBody

mainBody:                                         ; preds = %entry
  store float 0x400D9999A0000000, float* getelementptr inbounds (%gl_PerVertex* @"anon@0", i32 0, i32 0, i32 2)
  %0 = load <4 x float>* getelementptr inbounds ([10 x <4 x float>]* @bad, i32 0, i32 0)
  %1 = extractelement <4 x float> %0, i32 0
  %2 = fcmp oeq float %1, 0x4010CCCCC0000000
  br i1 %2, label %then, label %ifmerge

then:                                             ; preds = %mainBody
  %badorder3 = load <4 x float>* getelementptr inbounds ([10 x <4 x float>]* @bad, i32 0, i32 0)
  store <4 x float> %badorder3, <4 x float>* @badorder3
  br label %ifmerge

ifmerge:                                          ; preds = %mainBody, %then
  %3 = load float addrspace(2)* @f, !gla.uniform !19
  store float %3, float* getelementptr inbounds (%gl_PerVertex* @"anon@0", i32 0, i32 0, i32 0)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !7, !9}
!gla.inputs = !{!11, !13, !15, !17}
!gla.uniforms = !{!19, !20, !22, !26, !29, !32, !35}
!gla.noStaticUse = !{!20, !13, !9, !22, !26, !29, !32, !35, !15, !17}
!gla.invariant = !{!9}

!0 = !{!"main", i32 15}
!1 = !{!"", i32 16, %gl_PerVertex* @"anon@0_typeProxy", !2, !3}
!2 = !{i32 0, i32 0, i32 1024, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"gl_PerVertex", !4, !"gl_ClipDistance", !5}
!4 = !{i32 0, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!5 = !{!"", !6}
!6 = !{i32 0, i32 0, i32 1024, null, i32 -1, i32 12, i32 -1, i32 0, i32 -1}
!7 = !{!"badorder3", i32 7, <4 x float>* @badorder3_typeProxy, !8}
!8 = !{i32 0, i32 0, i32 1046, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!9 = !{!"badorder2", i32 7, <4 x float>* @badorder2_typeProxy, !10}
!10 = !{i32 0, i32 0, i32 1048, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!11 = !{!"bad", i32 1, [10 x <4 x float>]* @bad_typeProxy, !12}
!12 = !{i32 0, i32 0, i32 1036, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!13 = !{!"badorder", i32 1, <4 x float>* @badorder_typeProxy, !14}
!14 = !{i32 0, i32 0, i32 1047, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!15 = !{!"gl_VertexID", i32 2, i32* @gl_VertexID_typeProxy, !16}
!16 = !{i32 0, i32 0, i32 1049, null, i32 0, i32 7, i32 -1, i32 0, i32 -1}
!17 = !{!"gl_InstanceID", i32 3, i32* @gl_InstanceID_typeProxy, !18}
!18 = !{i32 0, i32 0, i32 1050, null, i32 0, i32 8, i32 -1, i32 0, i32 -1}
!19 = !{!"f", i32 12, float* @f_typeProxy, !4}
!20 = !{!"uv4", i32 12, <4 x float>* @uv4_typeProxy, !21}
!21 = !{i32 0, i32 0, i32 4, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!22 = !{!"boundInst", i32 13, %boundblock* @boundInst_typeProxy, !23, !24}
!23 = !{i32 6, i32 0, i32 1024, null, i32 -1, i32 0, i32 3, i32 0, i32 -1}
!24 = !{!"boundblock", !23, !"aoeu", !25}
!25 = !{!"", !4}
!26 = !{!"", i32 13, %anonblock* @"anon@1_typeProxy", !27, !28}
!27 = !{i32 6, i32 0, i32 1024, null, i32 -1, i32 0, i32 7, i32 0, i32 -1}
!28 = !{!"anonblock", !27, !"aoeu", !25}
!29 = !{!"sampb1", i32 12, i32* @sampb1_typeProxy, !30}
!30 = !{i32 5, i32 0, i32 1024, !31, i32 -1, i32 0, i32 4, i32 0, i32 -1}
!31 = !{i32 0, i32* @sampb1_typeProxy, i32 1, i1 false, i1 false, i32 0}
!32 = !{!"sampb2", i32 12, [10 x i32]* @sampb2_typeProxy, !33}
!33 = !{i32 5, i32 0, i32 1024, !34, i32 -1, i32 0, i32 5, i32 0, i32 -1}
!34 = !{i32 0, [10 x i32]* @sampb2_typeProxy, i32 1, i1 false, i1 false, i32 0}
!35 = !{!"sampb4", i32 12, i32* @sampb4_typeProxy, !36}
!36 = !{i32 5, i32 0, i32 1024, !37, i32 -1, i32 0, i32 31, i32 0, i32 -1}
!37 = !{i32 0, i32* @sampb4_typeProxy, i32 1, i1 false, i1 false, i32 0}


Bottom IR:
; ModuleID = 'Glslang'
target datalayout = "e-p:32:32"

%gl_PerVertex = type { [3 x float] }

@"anon@0" = global %gl_PerVertex zeroinitializer
@bad = global [10 x <4 x float>] zeroinitializer
@badorder3 = global <4 x float> zeroinitializer
@f = external addrspace(2) constant float
@badorder = global <4 x float> zeroinitializer
@badorder2 = global <4 x float> zeroinitializer
@gl_VertexID = global i32 0
@gl_InstanceID = global i32 0

define fastcc void @main() {
entry:
  %gla_constGEP = getelementptr %gl_PerVertex* @"anon@0", i32 0, i32 0, i32 2
  store float 0x400D9999A0000000, float* %gla_constGEP
  %gla_constGEP1 = getelementptr [10 x <4 x float>]* @bad, i32 0, i32 0
  %0 = load <4 x float>* %gla_constGEP1
  %1 = extractelement <4 x float> %0, i32 0
  %2 = fcmp oeq float %1, 0x4010CCCCC0000000
  br i1 %2, label %then, label %ifmerge

then:                                             ; preds = %entry
  store <4 x float> %0, <4 x float>* @badorder3
  br label %ifmerge

ifmerge:                                          ; preds = %entry, %then
  %3 = load float addrspace(2)* @f, !gla.uniform !19
  %gla_constGEP2 = getelementptr %gl_PerVertex* @"anon@0", i32 0, i32 0, i32 0
  store float %3, float* %gla_constGEP2
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %ifmerge
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !7, !9}
!gla.inputs = !{!11, !13, !15, !17}
!gla.uniforms = !{!19, !20, !22, !26, !29, !32, !35}
!gla.noStaticUse = !{!20, !13, !9, !22, !26, !29, !32, !35, !15, !17}
!gla.invariant = !{!9}

!0 = !{!"main", i32 15}
!1 = !{!"", i32 16, %gl_PerVertex* @"anon@0_typeProxy", !2, !3}
!2 = !{i32 0, i32 0, i32 1024, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"gl_PerVertex", !4, !"gl_ClipDistance", !5}
!4 = !{i32 0, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!5 = !{!"", !6}
!6 = !{i32 0, i32 0, i32 1024, null, i32 -1, i32 12, i32 -1, i32 0, i32 -1}
!7 = !{!"badorder3", i32 7, <4 x float>* @badorder3_typeProxy, !8}
!8 = !{i32 0, i32 0, i32 1046, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!9 = !{!"badorder2", i32 7, <4 x float>* @badorder2_typeProxy, !10}
!10 = !{i32 0, i32 0, i32 1048, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!11 = !{!"bad", i32 1, [10 x <4 x float>]* @bad_typeProxy, !12}
!12 = !{i32 0, i32 0, i32 1036, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!13 = !{!"badorder", i32 1, <4 x float>* @badorder_typeProxy, !14}
!14 = !{i32 0, i32 0, i32 1047, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!15 = !{!"gl_VertexID", i32 2, i32* @gl_VertexID_typeProxy, !16}
!16 = !{i32 0, i32 0, i32 1049, null, i32 0, i32 7, i32 -1, i32 0, i32 -1}
!17 = !{!"gl_InstanceID", i32 3, i32* @gl_InstanceID_typeProxy, !18}
!18 = !{i32 0, i32 0, i32 1050, null, i32 0, i32 8, i32 -1, i32 0, i32 -1}
!19 = !{!"f", i32 12, float* @f_typeProxy, !4}
!20 = !{!"uv4", i32 12, <4 x float>* @uv4_typeProxy, !21}
!21 = !{i32 0, i32 0, i32 4, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!22 = !{!"boundInst", i32 13, %boundblock* @boundInst_typeProxy, !23, !24}
!23 = !{i32 6, i32 0, i32 1024, null, i32 -1, i32 0, i32 3, i32 0, i32 -1}
!24 = !{!"boundblock", !23, !"aoeu", !25}
!25 = !{!"", !4}
!26 = !{!"", i32 13, %anonblock* @"anon@1_typeProxy", !27, !28}
!27 = !{i32 6, i32 0, i32 1024, null, i32 -1, i32 0, i32 7, i32 0, i32 -1}
!28 = !{!"anonblock", !27, !"aoeu", !25}
!29 = !{!"sampb1", i32 12, i32* @sampb1_typeProxy, !30}
!30 = !{i32 5, i32 0, i32 1024, !31, i32 -1, i32 0, i32 4, i32 0, i32 -1}
!31 = !{i32 0, i32* @sampb1_typeProxy, i32 1, i1 false, i1 false, i32 0}
!32 = !{!"sampb2", i32 12, [10 x i32]* @sampb2_typeProxy, !33}
!33 = !{i32 5, i32 0, i32 1024, !34, i32 -1, i32 0, i32 5, i32 0, i32 -1}
!34 = !{i32 0, [10 x i32]* @sampb2_typeProxy, i32 1, i1 false, i1 false, i32 0}
!35 = !{!"sampb4", i32 12, i32* @sampb4_typeProxy, !36}
!36 = !{i32 5, i32 0, i32 1024, !37, i32 -1, i32 0, i32 31, i32 0, i32 -1}
!37 = !{i32 0, i32* @sampb4_typeProxy, i32 1, i1 false, i1 false, i32 0}
#version 430 core
// LunarGOO output
uniform float f;
layout(location=4) uniform vec4 uv4;
layout(binding=3) uniform boundblock {
	int aoeu;
} boundInst;
layout(binding=7) uniform anonblock {
	int aoeu;
} ;
layout(binding=4) uniform sampler2D sampb1;
layout(binding=5) uniform sampler2D sampb2[10];
layout(binding=31) uniform sampler2D sampb4;
in vec4 bad[10];
in vec4 badorder;
out gl_PerVertex {
	float gl_ClipDistance[3];
} ;
flat out vec4 badorder3;
out vec4 badorder2;
const float C_3d7 = 3.7;
const float C_4d2 = 4.2;
invariant badorder2 ;
void main()
{
	gl_ClipDistance[2] = C_3d7;
	bool H_ixhhbt1 = bad[0].x == C_4d2;
	if (H_ixhhbt1) {
		badorder3 = bad[0];
	} else {
		gl_ClipDistance[0] = f;
		
	}
	
}

