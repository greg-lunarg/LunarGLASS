
Top IR:
; ModuleID = 'Glslang'

%S = type { <3 x float>, float }

@c = global <3 x float> zeroinitializer
@color = global <3 x float> zeroinitializer
@s = global %S zeroinitializer
@p = global [2 x <4 x float>] zeroinitializer
@pos = global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  br label %mainBody

mainBody:                                         ; preds = %entry
  %0 = load <3 x float>* @color
  %1 = load <3 x float>* getelementptr inbounds (%S* @s, i32 0, i32 0)
  %c = fadd <3 x float> %0, %1, !gla.precision !15
  store <3 x float> %c, <3 x float>* @c
  %2 = load <4 x float>* @pos
  %3 = load float* getelementptr inbounds (%S* @s, i32 0, i32 1)
  %4 = insertelement <4 x float> undef, float %3, i32 0, !gla.precision !15
  %5 = insertelement <4 x float> %4, float %3, i32 1, !gla.precision !15
  %6 = insertelement <4 x float> %5, float %3, i32 2, !gla.precision !15
  %7 = insertelement <4 x float> %6, float %3, i32 3, !gla.precision !15
  %8 = fmul <4 x float> %2, %7, !gla.precision !15
  store <4 x float> %8, <4 x float>* getelementptr inbounds ([2 x <4 x float>]* @p, i32 0, i32 1)
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %mainBody
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !3}
!gla.inputs = !{!5, !7, !13}

!0 = !{!"main", i32 15}
!1 = !{!"c", i32 7, <3 x float>* @c_typeProxy, !2}
!2 = !{i32 0, i32 2, i32 7, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"p", i32 7, [2 x <4 x float>]* @p_typeProxy, !4}
!4 = !{i32 0, i32 2, i32 3, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!5 = !{!"color", i32 1, <3 x float>* @color_typeProxy, !6}
!6 = !{i32 0, i32 2, i32 1024, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!7 = !{!"s", i32 1, %S* @s_typeProxy, !8, !9}
!8 = !{i32 4, i32 0, i32 1025, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!9 = !{!"S", !10, !"c", !11, !"f", !11}
!10 = !{i32 4, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!11 = !{!"", !12}
!12 = !{i32 0, i32 2, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!13 = !{!"pos", i32 1, <4 x float>* @pos_typeProxy, !14}
!14 = !{i32 0, i32 2, i32 1027, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!15 = !{i32 2}


Bottom IR:
; ModuleID = 'Glslang'
target datalayout = "e-p:32:32"

%S = type { <3 x float>, float }

@c = global <3 x float> zeroinitializer
@color = global <3 x float> zeroinitializer
@s = global %S zeroinitializer
@p = global [2 x <4 x float>] zeroinitializer
@pos = global <4 x float> zeroinitializer

define fastcc void @main() {
entry:
  %0 = load <3 x float>* @color
  %gla_constGEP = getelementptr %S* @s, i32 0, i32 0
  %1 = load <3 x float>* %gla_constGEP
  %c = fadd <3 x float> %0, %1, !gla.precision !15
  store <3 x float> %c, <3 x float>* @c
  %2 = load <4 x float>* @pos
  %gla_constGEP1 = getelementptr %S* @s, i32 0, i32 1
  %3 = load float* %gla_constGEP1
  %4 = call <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float %3, <4 x i32> zeroinitializer)
  %5 = fmul <4 x float> %2, %4, !gla.precision !15
  %gla_constGEP2 = getelementptr [2 x <4 x float>]* @p, i32 0, i32 1
  store <4 x float> %5, <4 x float>* %gla_constGEP2
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.gla.fSwizzle.v4f32.f32.v4i32(float, <4 x i32>) #0

attributes #0 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1, !3}
!gla.inputs = !{!5, !7, !13}

!0 = !{!"main", i32 15}
!1 = !{!"c", i32 7, <3 x float>* @c_typeProxy, !2}
!2 = !{i32 0, i32 2, i32 7, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"p", i32 7, [2 x <4 x float>]* @p_typeProxy, !4}
!4 = !{i32 0, i32 2, i32 3, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!5 = !{!"color", i32 1, <3 x float>* @color_typeProxy, !6}
!6 = !{i32 0, i32 2, i32 1024, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!7 = !{!"s", i32 1, %S* @s_typeProxy, !8, !9}
!8 = !{i32 4, i32 0, i32 1025, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!9 = !{!"S", !10, !"c", !11, !"f", !11}
!10 = !{i32 4, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!11 = !{!"", !12}
!12 = !{i32 0, i32 2, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!13 = !{!"pos", i32 1, <4 x float>* @pos_typeProxy, !14}
!14 = !{i32 0, i32 2, i32 1027, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!15 = !{i32 2}
#version 300 es
// LunarGOO output
precision mediump float; // this will be almost entirely overridden by individual declarations
struct S {
	mediump vec3 c;
	mediump float f;
};
in mediump vec3 color;
in S s;
in mediump vec4 pos;
layout(location=7) out mediump vec3 c;
layout(location=3) out mediump vec4 p[2];

void main()
{
	mediump vec3 H_n3hdmn = color + s.c;
	c = H_n3hdmn;
	vec4 H_l9788w = vec4(s.f);
	mediump vec4 H_59uux71 = H_l9788w * pos;
	p[1] = H_59uux71;
	
}

