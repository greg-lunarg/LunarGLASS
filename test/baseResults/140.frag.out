
Top IR:
; ModuleID = 'Glslang'

%bn = type { [4 x [4 x <4 x float>]], [4 x [4 x <4 x float>]], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>] }

@o = global <4 x float> zeroinitializer
@gl_ClipDistance = global [5 x float] zeroinitializer
@k = global <4 x float> zeroinitializer
@sampR = external addrspace(1) constant i32
@sampB = external addrspace(1) constant i32
@i1 = internal global float 0.000000e+00
@gl_FrontFacing = global i1 false
@i2 = internal global float 0.000000e+00
@samp2Da = external addrspace(1) constant [3 x i32]
@"anon@0" = external addrspace(2) constant %bn

define fastcc void @main() {
entry:
  %i1 = alloca float
  %o3 = alloca float
  %o = alloca i32
  %0 = load i1* @gl_FrontFacing
  br i1 %0, label %then, label %else

mainBody:                                         ; preds = %ifmerge
  %1 = load float* getelementptr inbounds ([5 x float]* @gl_ClipDistance, i32 0, i32 2)
  store float %1, float* getelementptr inbounds (<4 x float>* @o, i32 0, i32 1)
  %2 = load <4 x float>* @k
  %3 = fptosi <4 x float> %2 to <4 x i32>
  %4 = load i32* %o
  %5 = extractelement <4 x i32> %3, i32 0
  %6 = getelementptr [5 x float]* @gl_ClipDistance, i32 0, i32 %5
  %7 = load float* %6
  store float %7, float* getelementptr inbounds (<4 x float>* @o, i32 0, i32 2)
  %8 = load i32 addrspace(1)* @sampR, !gla.uniform !9
  %o1 = call <2 x i32> @llvm.gla.queryTextureSizeNoLod.v2i32(i32 5, i32 %8)
  %9 = load i32 addrspace(1)* @sampB, !gla.uniform !12
  %o2 = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %9)
  %10 = insertelement <2 x i32> undef, i32 %o2, i32 0
  %11 = insertelement <2 x i32> %10, i32 %o2, i32 1
  %12 = add <2 x i32> %o1, %11
  %13 = sitofp <2 x i32> %12 to <2 x float>
  %14 = load float* %o3
  %15 = extractelement <2 x float> %13, i32 0
  %16 = fdiv float %15, 1.000000e+02
  store float %16, float* getelementptr inbounds (<4 x float>* @o, i32 0, i32 3)
  %17 = call float @"foo("()
  store float %17, float* getelementptr inbounds (<4 x float>* @o, i32 0, i32 2)
  br label %stage-epilogue

then:                                             ; preds = %entry
  store float -2.000000e+00, float* %i1
  br label %ifmerge

else:                                             ; preds = %entry
  store float 2.000000e+00, float* %i1
  br label %ifmerge

ifmerge:                                          ; preds = %else, %then
  %i14 = load float* %i1
  store float %i14, float* @i1
  store float 1.020000e+02, float* @i2
  br label %mainBody

stage-epilogue:                                   ; preds = %mainBody
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: alwaysinline
define internal fastcc float @"foo("() #0 {
entry:
  %0 = load float* @i1
  %1 = load float* @i2
  %2 = fadd float %0, %1
  ret float %2

post-return:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.queryTextureSizeNoLod.v2i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.queryTextureSizeNoLod.i32(i32, i32) #1

attributes #0 = { alwaysinline }
attributes #1 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1}
!gla.inputs = !{!3, !5, !7}
!gla.uniforms = !{!9, !12, !15, !18}
!gla.noStaticUse = !{!15, !18}

!0 = !{!"main", i32 15}
!1 = !{!"o", i32 7, <4 x float>* @o_typeProxy, !2}
!2 = !{i32 0, i32 0, i32 1024, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"gl_ClipDistance", i32 1, [5 x float]* @gl_ClipDistance_typeProxy, !4}
!4 = !{i32 0, i32 0, i32 1025, null, i32 1, i32 12, i32 -1, i32 0, i32 -1}
!5 = !{!"k", i32 1, <4 x float>* @k_typeProxy, !6}
!6 = !{i32 0, i32 0, i32 1030, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!7 = !{!"gl_FrontFacing", i32 4, i1* @gl_FrontFacing_typeProxy, !8}
!8 = !{i32 0, i32 0, i32 1031, null, i32 0, i32 40, i32 -1, i32 0, i32 -1}
!9 = !{!"sampR", i32 12, i32* @sampR_typeProxy, !10}
!10 = !{i32 5, i32 0, i32 1024, !11, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!11 = !{i32 0, i32* @sampR_typeProxy, i32 4, i1 false, i1 false, i32 0}
!12 = !{!"sampB", i32 12, i32* @sampB_typeProxy, !13}
!13 = !{i32 5, i32 0, i32 1024, !14, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!14 = !{i32 0, i32* @sampB_typeProxy, i32 5, i1 false, i1 false, i32 1}
!15 = !{!"samp2Da", i32 12, [3 x i32]* @samp2Da_typeProxy, !16}
!16 = !{i32 5, i32 0, i32 1024, !17, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!17 = !{i32 0, [3 x i32]* @samp2Da_typeProxy, i32 1, i1 false, i1 false, i32 0}
!18 = !{!"", i32 13, %bn* @"anon@0_typeProxy", !19, !20}
!19 = !{i32 7, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!20 = !{!"bn", !19, !"matra", !21, !"matca", !23, !"matr", !21, !"matc", !23, !"matrdef", !21}
!21 = !{!"", !22}
!22 = !{i32 2, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!23 = !{!"", !24}
!24 = !{i32 3, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}


Bottom IR:
; ModuleID = 'Glslang'
target datalayout = "e-p:32:32"

@o = global <4 x float> zeroinitializer
@gl_ClipDistance = global [5 x float] zeroinitializer
@k = global <4 x float> zeroinitializer
@sampR = external addrspace(1) constant i32
@sampB = external addrspace(1) constant i32
@gl_FrontFacing = global i1 false

define fastcc void @main() {
entry:
  %0 = load i1* @gl_FrontFacing
  %. = select i1 %0, float -2.000000e+00, float 2.000000e+00
  %gla_constGEP = getelementptr [5 x float]* @gl_ClipDistance, i32 0, i32 2
  %1 = load float* %gla_constGEP
  %gla_constGEP5 = getelementptr <4 x float>* @o, i32 0, i32 1
  store float %1, float* %gla_constGEP5
  %2 = load <4 x float>* @k
  %3 = extractelement <4 x float> %2, i32 0
  %4 = fptosi float %3 to i32
  %5 = getelementptr [5 x float]* @gl_ClipDistance, i32 0, i32 %4
  %6 = load float* %5
  %gla_constGEP6 = getelementptr <4 x float>* @o, i32 0, i32 2
  store float %6, float* %gla_constGEP6
  %7 = load i32 addrspace(1)* @sampR, !gla.uniform !9
  %o1 = call <2 x i32> @llvm.gla.queryTextureSizeNoLod.v2i32(i32 5, i32 %7)
  %8 = load i32 addrspace(1)* @sampB, !gla.uniform !12
  %o2 = call i32 @llvm.gla.queryTextureSizeNoLod.i32(i32 0, i32 %8)
  %.lhs = extractelement <2 x i32> %o1, i32 0
  %9 = add i32 %o2, %.lhs
  %10 = sitofp i32 %9 to float
  %11 = fdiv float %10, 1.000000e+02
  %gla_constGEP7 = getelementptr <4 x float>* @o, i32 0, i32 3
  store float %11, float* %gla_constGEP7
  %12 = fadd float %., 1.020000e+02
  %gla_constGEP8 = getelementptr <4 x float>* @o, i32 0, i32 2
  store float %12, float* %gla_constGEP8
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %entry
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x i32> @llvm.gla.queryTextureSizeNoLod.v2i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.gla.queryTextureSizeNoLod.i32(i32, i32) #0

attributes #0 = { nounwind readnone }

!gla.entrypoint = !{!0}
!gla.outputs = !{!1}
!gla.inputs = !{!3, !5, !7}
!gla.uniforms = !{!9, !12, !15, !18}
!gla.noStaticUse = !{!15, !18}

!0 = !{!"main", i32 15}
!1 = !{!"o", i32 7, <4 x float>* @o_typeProxy, !2}
!2 = !{i32 0, i32 0, i32 1024, null, i32 0, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"gl_ClipDistance", i32 1, [5 x float]* @gl_ClipDistance_typeProxy, !4}
!4 = !{i32 0, i32 0, i32 1025, null, i32 1, i32 12, i32 -1, i32 0, i32 -1}
!5 = !{!"k", i32 1, <4 x float>* @k_typeProxy, !6}
!6 = !{i32 0, i32 0, i32 1030, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!7 = !{!"gl_FrontFacing", i32 4, i1* @gl_FrontFacing_typeProxy, !8}
!8 = !{i32 0, i32 0, i32 1031, null, i32 0, i32 40, i32 -1, i32 0, i32 -1}
!9 = !{!"sampR", i32 12, i32* @sampR_typeProxy, !10}
!10 = !{i32 5, i32 0, i32 1024, !11, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!11 = !{i32 0, i32* @sampR_typeProxy, i32 4, i1 false, i1 false, i32 0}
!12 = !{!"sampB", i32 12, i32* @sampB_typeProxy, !13}
!13 = !{i32 5, i32 0, i32 1024, !14, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!14 = !{i32 0, i32* @sampB_typeProxy, i32 5, i1 false, i1 false, i32 1}
!15 = !{!"samp2Da", i32 12, [3 x i32]* @samp2Da_typeProxy, !16}
!16 = !{i32 5, i32 0, i32 1024, !17, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!17 = !{i32 0, [3 x i32]* @samp2Da_typeProxy, i32 1, i1 false, i1 false, i32 0}
!18 = !{!"", i32 13, %bn* @"anon@0_typeProxy", !19, !20}
!19 = !{i32 7, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!20 = !{!"bn", !19, !"matra", !21, !"matca", !23, !"matr", !21, !"matc", !23, !"matrdef", !21}
!21 = !{!"", !22}
!22 = !{i32 2, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!23 = !{!"", !24}
!24 = !{i32 3, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
#version 140
// LunarGOO output
uniform sampler2DRect sampR;
uniform isamplerBuffer sampB;
uniform sampler2D samp2Da[3];
layout(std140) uniform bn {
	layout(row_major) mat4 matra[4];
	mat4 matca[4];
	layout(row_major) mat4 matr;
	mat4 matc;
	layout(row_major) mat4 matrdef;
} ;
in float gl_ClipDistance[5];
in vec4 k;
out vec4 o;
const float C_a2d0 = -2.0;
const float C_2d0 = 2.0;
const float C_100d0 = 100.0;
const float C_102d0 = 102.0;

void main()
{
	float H_0rv9j51 = gl_FrontFacing ? C_a2d0 : C_2d0;
	o.y = gl_ClipDistance[2];
	int H_gxl6b71 = int(k.x);
	o.z = gl_ClipDistance[H_gxl6b71];
	ivec2 Lg_1 = textureSize(sampR);
	int Lg_2 = textureSize(sampB);
	int H_lye7b3 = Lg_1.x + Lg_2;
	float H_hwukdi1 = float(H_lye7b3);
	float H_p0f6yv = H_hwukdi1 / C_100d0;
	o.w = H_p0f6yv;
	float H_znieme = H_0rv9j51 + C_102d0;
	o.z = H_znieme;
	
}

