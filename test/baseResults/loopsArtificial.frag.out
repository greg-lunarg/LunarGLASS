
Top IR:
; ModuleID = 'Glslang'

@BaseColor = global <4 x float> zeroinitializer
@bigColor4 = external addrspace(2) constant <4 x float>
@d4 = external addrspace(2) constant float
@d13 = external addrspace(2) constant float
@gl_FragColor = global <4 x float> zeroinitializer
@bigColor = external addrspace(2) constant <4 x float>
@bigColor1_1 = external addrspace(2) constant <4 x float>
@bigColor1_2 = external addrspace(2) constant <4 x float>
@bigColor1_3 = external addrspace(2) constant <4 x float>
@bigColor2 = external addrspace(2) constant <4 x float>
@bigColor3 = external addrspace(2) constant <4 x float>
@bigColor5 = external addrspace(2) constant <4 x float>
@bigColor6 = external addrspace(2) constant <4 x float>
@bigColor7 = external addrspace(2) constant <4 x float>
@bigColor8 = external addrspace(2) constant <4 x float>
@d = external addrspace(2) constant float
@d2 = external addrspace(2) constant float
@d3 = external addrspace(2) constant float
@d5 = external addrspace(2) constant float
@d6 = external addrspace(2) constant float
@d7 = external addrspace(2) constant float
@d8 = external addrspace(2) constant float
@d9 = external addrspace(2) constant float
@d10 = external addrspace(2) constant float
@d11 = external addrspace(2) constant float
@d12 = external addrspace(2) constant float
@d14 = external addrspace(2) constant float
@d15 = external addrspace(2) constant float
@d16 = external addrspace(2) constant float
@d17 = external addrspace(2) constant float
@d18 = external addrspace(2) constant float
@d19 = external addrspace(2) constant float
@d20 = external addrspace(2) constant float
@d21 = external addrspace(2) constant float
@d22 = external addrspace(2) constant float
@d23 = external addrspace(2) constant float
@d24 = external addrspace(2) constant float
@d25 = external addrspace(2) constant float
@d26 = external addrspace(2) constant float
@d27 = external addrspace(2) constant float
@d28 = external addrspace(2) constant float
@d29 = external addrspace(2) constant float
@d30 = external addrspace(2) constant float
@d31 = external addrspace(2) constant float
@d32 = external addrspace(2) constant float
@d33 = external addrspace(2) constant float
@d34 = external addrspace(2) constant float
@Count = external addrspace(2) constant i32

define fastcc void @main() {
entry:
  %color = alloca <4 x float>
  br label %mainBody

mainBody:                                         ; preds = %entry
  %color1 = load <4 x float>* @BaseColor
  store <4 x float> %color1, <4 x float>* %color
  br label %loop-header

loop-header:                                      ; preds = %mainBody
  br label %loop-body

loop-body:                                        ; preds = %loop-test, %loop-header
  %0 = load <4 x float> addrspace(2)* @bigColor4, !gla.uniform !3
  %1 = load <4 x float>* %color
  %color2 = fadd <4 x float> %1, %0
  store <4 x float> %color2, <4 x float>* %color
  %2 = load <4 x float>* %color
  %3 = extractelement <4 x float> %2, i32 0
  %4 = load float addrspace(2)* @d4, !gla.uniform !5
  %5 = fcmp olt float %3, %4
  br i1 %5, label %then, label %ifmerge4

then:                                             ; preds = %loop-body
  %6 = load <4 x float>* %color
  %7 = extractelement <4 x float> %6, i32 2
  %8 = fadd float %7, 2.000000e+00
  %9 = getelementptr <4 x float>* %color, i32 0, i32 2
  store float %8, float* %9
  %10 = load <4 x float>* %color
  %11 = extractelement <4 x float> %10, i32 2
  %12 = load float addrspace(2)* @d4, !gla.uniform !5
  %13 = fcmp olt float %11, %12
  br i1 %13, label %then3, label %ifmerge

then3:                                            ; preds = %then
  %14 = load <4 x float>* %color
  %15 = extractelement <4 x float> %14, i32 0
  %16 = fadd float %15, 1.000000e+00
  %17 = getelementptr <4 x float>* %color, i32 0, i32 0
  store float %16, float* %17
  br label %loop-test

post-loop-continue:                               ; No predecessors!
  unreachable

ifmerge:                                          ; preds = %then
  br label %ifmerge4

ifmerge4:                                         ; preds = %loop-body, %ifmerge
  %18 = load <4 x float>* %color
  %19 = extractelement <4 x float> %18, i32 1
  %20 = load float addrspace(2)* @d4, !gla.uniform !5
  %21 = fcmp olt float %19, %20
  br i1 %21, label %then5, label %else

then5:                                            ; preds = %ifmerge4
  %22 = load float addrspace(2)* @d4, !gla.uniform !5
  %23 = load <4 x float>* %color
  %24 = extractelement <4 x float> %23, i32 1
  %25 = fadd float %24, %22
  %26 = getelementptr <4 x float>* %color, i32 0, i32 1
  store float %25, float* %26
  br label %ifmerge6

else:                                             ; preds = %ifmerge4
  %27 = load float addrspace(2)* @d4, !gla.uniform !5
  %28 = load <4 x float>* %color
  %29 = extractelement <4 x float> %28, i32 0
  %30 = fadd float %29, %27
  %31 = getelementptr <4 x float>* %color, i32 0, i32 0
  store float %30, float* %31
  br label %ifmerge6

ifmerge6:                                         ; preds = %else, %then5
  br label %loop-test

loop-test:                                        ; preds = %ifmerge6, %then3
  %32 = load <4 x float>* %color
  %33 = extractelement <4 x float> %32, i32 2
  %34 = load float addrspace(2)* @d4, !gla.uniform !5
  %35 = fcmp olt float %33, %34
  br i1 %35, label %loop-body, label %loop-merge

loop-merge:                                       ; preds = %loop-test
  br label %loop-header7

loop-header7:                                     ; preds = %ifmerge23, %then17, %loop-merge
  %36 = load <4 x float>* %color
  %37 = extractelement <4 x float> %36, i32 3
  %38 = load float addrspace(2)* @d13, !gla.uniform !6
  %39 = fcmp olt float %37, %38
  %40 = xor i1 %39, true
  br i1 %40, label %then8, label %ifmerge9

then8:                                            ; preds = %loop-header7
  br label %loop-merge24

post-loop-break:                                  ; No predecessors!
  unreachable

ifmerge9:                                         ; preds = %loop-header7
  %41 = load <4 x float>* %color
  %42 = extractelement <4 x float> %41, i32 2
  %43 = load float addrspace(2)* @d13, !gla.uniform !6
  %44 = fcmp olt float %42, %43
  br i1 %44, label %then10, label %else12

then10:                                           ; preds = %ifmerge9
  %45 = load <4 x float>* %color
  %color11 = fadd <4 x float> %45, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color11, <4 x float>* %color
  br label %ifmerge14

else12:                                           ; preds = %ifmerge9
  %46 = load <4 x float>* %color
  %color13 = fsub <4 x float> %46, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color13, <4 x float>* %color
  br label %ifmerge14

ifmerge14:                                        ; preds = %else12, %then10
  %47 = load <4 x float> addrspace(2)* @bigColor4, !gla.uniform !3
  %48 = load <4 x float>* %color
  %color15 = fadd <4 x float> %48, %47
  store <4 x float> %color15, <4 x float>* %color
  %49 = load <4 x float>* %color
  %50 = extractelement <4 x float> %49, i32 0
  %51 = load float addrspace(2)* @d4, !gla.uniform !5
  %52 = fcmp olt float %50, %51
  br i1 %52, label %then16, label %ifmerge20

then16:                                           ; preds = %ifmerge14
  %53 = load <4 x float>* %color
  %54 = extractelement <4 x float> %53, i32 2
  %55 = fadd float %54, 2.000000e+00
  %56 = getelementptr <4 x float>* %color, i32 0, i32 2
  store float %55, float* %56
  %57 = load <4 x float>* %color
  %58 = extractelement <4 x float> %57, i32 2
  %59 = load float addrspace(2)* @d4, !gla.uniform !5
  %60 = fcmp olt float %58, %59
  br i1 %60, label %then17, label %ifmerge19

then17:                                           ; preds = %then16
  %61 = load <4 x float>* %color
  %62 = extractelement <4 x float> %61, i32 0
  %63 = fadd float %62, 1.000000e+00
  %64 = getelementptr <4 x float>* %color, i32 0, i32 0
  store float %63, float* %64
  br label %loop-header7

post-loop-continue18:                             ; No predecessors!
  unreachable

ifmerge19:                                        ; preds = %then16
  br label %ifmerge20

ifmerge20:                                        ; preds = %ifmerge14, %ifmerge19
  %65 = load <4 x float>* %color
  %66 = extractelement <4 x float> %65, i32 1
  %67 = load float addrspace(2)* @d4, !gla.uniform !5
  %68 = fcmp olt float %66, %67
  br i1 %68, label %then21, label %else22

then21:                                           ; preds = %ifmerge20
  %69 = load float addrspace(2)* @d4, !gla.uniform !5
  %70 = load <4 x float>* %color
  %71 = extractelement <4 x float> %70, i32 1
  %72 = fadd float %71, %69
  %73 = getelementptr <4 x float>* %color, i32 0, i32 1
  store float %72, float* %73
  br label %ifmerge23

else22:                                           ; preds = %ifmerge20
  %74 = load float addrspace(2)* @d4, !gla.uniform !5
  %75 = load <4 x float>* %color
  %76 = extractelement <4 x float> %75, i32 0
  %77 = fadd float %76, %74
  %78 = getelementptr <4 x float>* %color, i32 0, i32 0
  store float %77, float* %78
  br label %ifmerge23

ifmerge23:                                        ; preds = %else22, %then21
  br label %loop-header7

loop-merge24:                                     ; preds = %then8
  %79 = load <4 x float>* %color
  %color25 = fadd <4 x float> %79, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %color25, <4 x float>* %color
  %gl_FragColor = load <4 x float>* %color
  store <4 x float> %gl_FragColor, <4 x float>* @gl_FragColor
  br label %stage-epilogue

stage-epilogue:                                   ; preds = %loop-merge24
  br label %stage-exit

stage-exit:                                       ; preds = %stage-epilogue
  ret void
}

!gla.entrypoint = !{!0}
!gla.inputs = !{!1}
!gla.uniforms = !{!3, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}
!gla.outputs = !{!50}
!gla.noStaticUse = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}

!0 = !{!"main", i32 15}
!1 = !{!"BaseColor", i32 1, <4 x float>* @BaseColor_typeProxy, !2}
!2 = !{i32 0, i32 0, i32 1024, null, i32 1, i32 0, i32 -1, i32 0, i32 -1}
!3 = !{!"bigColor4", i32 12, <4 x float>* @bigColor4_typeProxy, !4}
!4 = !{i32 0, i32 0, i32 1024, null, i32 -1, i32 0, i32 -1, i32 0, i32 -1}
!5 = !{!"d4", i32 12, float* @d4_typeProxy, !4}
!6 = !{!"d13", i32 12, float* @d13_typeProxy, !4}
!7 = !{!"bigColor", i32 12, <4 x float>* @bigColor_typeProxy, !4}
!8 = !{!"bigColor1_1", i32 12, <4 x float>* @bigColor1_1_typeProxy, !4}
!9 = !{!"bigColor1_2", i32 12, <4 x float>* @bigColor1_2_typeProxy, !4}
!10 = !{!"bigColor1_3", i32 12, <4 x float>* @bigColor1_3_typeProxy, !4}
!11 = !{!"bigColor2", i32 12, <4 x float>* @bigColor2_typeProxy, !4}
!12 = !{!"bigColor3", i32 12, <4 x float>* @bigColor3_typeProxy, !4}
!13 = !{!"bigColor5", i32 12, <4 x float>* @bigColor5_typeProxy, !4}
!14 = !{!"bigColor6", i32 12, <4 x float>* @bigColor6_typeProxy, !4}
!15 = !{!"bigColor7", i32 12, <4 x float>* @bigColor7_typeProxy, !4}
!16 = !{!"bigColor8", i32 12, <4 x float>* @bigColor8_typeProxy, !4}
!17 = !{!"d", i32 12, float* @d_typeProxy, !4}
!18 = !{!"d2", i32 12, float* @d2_typeProxy, !4}
!19 = !{!"d3", i32 12, float* @d3_typeProxy, !4}
!20 = !{!"d5", i32 12, float* @d5_typeProxy, !4}
!21 = !{!"d6", i32 12, float* @d6_typeProxy, !4}
!22 = !{!"d7", i32 12, float* @d7_typeProxy, !4}
!23 = !{!"d8", i32 12, float* @d8_typeProxy, !4}
!24 = !{!"d9", i32 12, float* @d9_typeProxy, !4}
!25 = !{!"d10", i32 12, float* @d10_typeProxy, !4}
!26 = !{!"d11", i32 12, float* @d11_typeProxy, !4}
!27 = !{!"d12", i32 12, float* @d12_typeProxy, !4}
!28 = !{!"d14", i32 12, float* @d14_typeProxy, !4}
!29 = !{!"d15", i32 12, float* @d15_typeProxy, !4}
!30 = !{!"d16", i32 12, float* @d16_typeProxy, !4}
!31 = !{!"d17", i32 12, float* @d17_typeProxy, !4}
!32 = !{!"d18", i32 12, float* @d18_typeProxy, !4}
!33 = !{!"d19", i32 12, float* @d19_typeProxy, !4}
!34 = !{!"d20", i32 12, float* @d20_typeProxy, !4}
!35 = !{!"d21", i32 12, float* @d21_typeProxy, !4}
!36 = !{!"d22", i32 12, float* @d22_typeProxy, !4}
!37 = !{!"d23", i32 12, float* @d23_typeProxy, !4}
!38 = !{!"d24", i32 12, float* @d24_typeProxy, !4}
!39 = !{!"d25", i32 12, float* @d25_typeProxy, !4}
!40 = !{!"d26", i32 12, float* @d26_typeProxy, !4}
!41 = !{!"d27", i32 12, float* @d27_typeProxy, !4}
!42 = !{!"d28", i32 12, float* @d28_typeProxy, !4}
!43 = !{!"d29", i32 12, float* @d29_typeProxy, !4}
!44 = !{!"d30", i32 12, float* @d30_typeProxy, !4}
!45 = !{!"d31", i32 12, float* @d31_typeProxy, !4}
!46 = !{!"d32", i32 12, float* @d32_typeProxy, !4}
!47 = !{!"d33", i32 12, float* @d33_typeProxy, !4}
!48 = !{!"d34", i32 12, float* @d34_typeProxy, !4}
!49 = !{!"Count", i32 12, i32* @Count_typeProxy, !4}
!50 = !{!"gl_FragColor", i32 7, <4 x float>* @gl_FragColor_typeProxy, !51}
!51 = !{i32 0, i32 0, i32 1025, null, i32 0, i32 43, i32 -1, i32 0, i32 -1}
LunarGOO: /home/greg/ss/LunarGLASS.36/Core/LLVM/llvm-3.6.2/lib/Analysis/ScalarEvolution.cpp:4391: unsigned int llvm::ScalarEvolution::getSmallConstantTripCount(llvm::Loop*, llvm::BasicBlock*): Assertion `L->isLoopExiting(ExitingBlock) && "Exiting block must actually branch out of the loop!"' failed.
